,Text,,Boolean,Enumeration,Object/Universal
,Character,String{{ref|string|[a]}},,,
Ada[1],Character,String & Bounded_String & Unbounded_String,Boolean,"(item1, item2, ...)",tagged null record
ALGOL 68,char,string & bytes,bool & bits,{{n/a}} - User defined,{{n/a}}
C (C99),char wchar_t,{{n/a}},bool{{ref|int bool|[b]}},"enum «name» {item1, item2, ... };",void *
C++ (STL),,«std::»string,,,
Objective-C,unichar,NSString *,BOOL,,id
C#,char,string,bool,"enum name {item1, item2, ... }",object
Java,,String,boolean,,Object
Go,byte rune,string,bool,const (<dl><dd>item1 = iota item2 ... </dd></dl>),interface{}
Rust,char,String,bool,"enum name {<dl><dd>item1, item2, ...</dd></dl>}",{{n/a}}
Swift,Character,String,Bool,"enum name { case item1, item2, ... }",Any
D,char,string,bool,"enum name {item1, item2, ... }",std.variant.Variant
Common Lisp,,,,,
Scheme,,,,,
ISLISP,,,,,
Pascal (ISO),char,{{n/a}},boolean,"(item1, item2, ...)",{{n/a}}
Object Pascal (Delphi),,string,,,variant
Visual Basic,{{n/a}},String,Boolean,Enum name <dl><dd> item1 item2 ... </dd></dl> End Enum,Variant
Visual Basic .NET,Char,,,,Object
Xojo,{{n/a}},,,,Object or Variant
Python,{{n/a}}{{ref|string as char|[d]}},str,bool,,object
JavaScript,{{n/a}}{{ref|string as char|[d]}},String,Boolean,,Object
S-Lang,,,,,
Fortran,CHARACTER(LEN = *),"CHARACTER(LEN = :), allocatable",LOGICAL(KIND = n){{ref|logical kinds|[f]}},,CLASS(*)
PHP,{{n/a}}{{ref|string as char|[d]}},string,bool,,(type declaration omitted)
Perl,{{n/a}}{{ref|string as char|[d]}},,,,UNIVERSAL
Perl 6,Char,Str,Bool,enum name <item1 item2 ...> or enum name <<:item1(value) :item2(value) ...>>,Mu
Ruby,{{n/a}}{{ref|string as char|[d]}},String,Object{{ref|Ruby's bool|[c]}},,Object
Scala,Char,String,Boolean,"object name extends Enumeration {<dl><dd>val item1, item2, ... = Value</dd></dl>}",Any
Seed7,char,string,boolean,"const type: name is new enum<dl><dd> item1, item2, ... </dd></dl>end enum;",
Windows PowerShell,,,,,
OCaml,char,string,bool,{{n/a}}{{ref|enum|[e]}},{{n/a}}
F#,,,,item2 = value | ...,obj
Standard ML,,,,{{n/a}}{{ref|enum|[e]}},{{n/a}}
Haskell (GHC),Char,String,Bool,{{n/a}}{{ref|enum|[e]}},{{n/a}}
Eiffel,CHARACTER,STRING,BOOLEAN,{{n/a}},ANY
COBOL,PIC X,PIC X(string length) or PIC X«X...»,PIC 1«(number of digits)» or PIC 1«1...»,{{n/a}},OBJECT REFERENCE
Mathematica,{{n/a}}{{ref|string as char|[d]}},String,,,{{n/a}}
